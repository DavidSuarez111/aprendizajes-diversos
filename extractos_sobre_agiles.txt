Metodologías Agiles -Scrum

1. Es una forma de trabajo. 
    Se puede usar para el desarrollo ágil de software
2. Un proceso de aplicar de forma regular buenas prácticas para trabajar colaborativamente y obtener resultados. 
3. Orientado a mejora continua. 

Separado. No se puede seguir hasta acabar con un punto, modelo de cascadas. 

¿Cómo aplicar Scrum-Ágiles? 
Roles: 
    Product owner. Representante del cliente provee reglas y requerimientos. -Representación -sutil- de inversores y usuarios. Product owner hace entrevistas para entender los objetivos, analiza los procesos, prioriza, mantiene el registro de avances, mapas de procesos. 
    Scrum Master. Lidera el equipo y se encarga que se cumplan las reglas del marco de scrum. Divide tareas y objetivos, establece fechas. 
    Equipo de Sistemas/Desarrollo. Analistas, QAs, desarrolladores y cualquier miembro que colabore con el proceso de desarrollo de software, su implementación y futuro mantenimiento. 

¿Cómo se ve en el día a día? 
PO habla con usuarios y stakeholders. Genera una visión de producto, los procesos a realizar y contacta personas. 
SM hace objetivos, tareas y establece fechas. Va a revisar que se cumplan va a hablar con los integrantes del equipo técnico en desarrollo. 
ED hace la chamba en múltiples ramas a la vez buscando palomear pequeñas tareas e integrar el desarrollo. 

Suceden retroalimentaciones. SM dice que se cumplió y se pone a prueba por clientes como usuarios que hablaron con PO. Y se continúa si van faltando cosas. 
A veces todos los internos están a favor pero a los clientes finales no les sirve bien o les gusta así que se tienen que hacer cambios y a iterar de nuevo. 
Detalles: a veces el inversor quiere algún detalle y ni modo es el que financía tiene importancia. 

Lo ideal es que el SM y PO tengan algo de conocimiento técnico para que la comunicación con el ED sea eficiente y empática. No sobreejercer presiones debido a ignorancia de los procesos.

Diccionario de Scrum
    Product Backlog: Lista priorizada de todas las funcionalidades, requisitos, mejoras y arreglos por incluir en el producto. -Lo que falta hacer, tareas, arreglos, mejoras para tener listo el producto. 
    Sprint: Periodo fijo y corto en el que se acciona sobre desarrollo, prueba y entrega de parcialidades o incrementales de software. 
    User story: Breve descripción de una funcionalidad del producto desde la perspectiva del usuario. Algo que ha de ser integrado aunque venga en lenguaje no técnico. 

okok. Incrementos. Cambios de antes para buscar mejorar un producto. Pueden ser incrementos en frontend o backend. Asumiendo sprints generalmente se integraría en 1 o 2 semanas en raras ocasiones menos. 

Etapas - Ceremonias
    Planificación de sprints. Al empezar se ocupa definir las tareas por rol. ED y PO. Se debe hacer lo más pronto y temprano posible. 1 sola vez. 
        El problema más frecuente es que el ED sobreestime tiempos y el SM subestime. Se tiene que hacer las paces, negociar. Es válido comunicar algunos colchones de tiempo extra digno. Ser sinceros. 
            Herramienta: variable pero puede ser notion u otras. 
    Daily SCRUM. Reunión diaria de máximo 15 minutos. El ED actualiza sobre el progreso hasta el momento. Todos los días.
        Responde ¿Qué hice ayer? ¿Qué haré hoy? ¿Hay algún impedimento?. objetivo: identificar obstáculos y fomentar la colaboración entre los miembros del equipo. Si hay problemas se ocupan atender pero no en el daily solo los involucrados. 
    Sprint REVIEW. ED muestra el trabajo a PO y demás. Se retroalimenta. Se establecen nuevos objetivos para siguiente sprint. 
        Aparecen bugs. Expectativas no alcanzadas. Se piden modificaciones. Se retoma lo previo para mejora. Puede generar burnout si algo no se arregla hasta generar renuncias o despidos. 
    Sprint Retrospective. 
        Se reflexiona sobre el trabajo, lo bueno, lo malo y lo mejorable. Se busca generar accionables para eficientar más el trabajo y aumentar la calidad de los productos siguientes. 
            Este es un proceso interno, ya sin clientes externos usuarios o inversores. 
            Verbos de accionables: stop, less, keep, more, start. 
    
Ejemplos de retrospective: 
    Aprender una metodología, tecnología. 
    Reducir peleas, mejorar comunicación. 
    Menos reuniones, más dedicados al trabajo. 



    

    
    










